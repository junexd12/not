-- GabGui mini Rayfield-style clone (client-only)
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- Theme
local THEME = {
    Background = Color3.fromRGB(25,25,30),
    Header = Color3.fromRGB(35,35,40),
    Accent = Color3.fromRGB(180,0,255),
    Button = Color3.fromRGB(40,40,50),
    ToggleOn = Color3.fromRGB(180,0,255),
    ToggleOff = Color3.fromRGB(70,70,80),
    Text = Color3.fromRGB(235,235,235),
    Corner = 10,
    WindowSize = UDim2.new(0,360,0,260)
}

-- Helper function
local function new(class, props)
    local obj = Instance.new(class)
    if props then
        for k,v in pairs(props) do
            if k=="Parent" then obj.Parent=v else pcall(function() obj[k]=v end) end
        end
    end
    return obj
end

-- Notifications
function GabGuiNotify(data)
    local title = data.Title or "Notification"
    local content = data.Content or ""
    local duration = data.Duration or 3
    local gui = new("ScreenGui",{Parent=PlayerGui, ResetOnSpawn=false})
    local root = new("Frame",{Parent=gui, Size=UDim2.new(0,280,0,64), Position=UDim2.new(1,-300,0,24), BackgroundColor3=THEME.Header, BorderSizePixel=0})
    new("UICorner",{Parent=root, CornerRadius=UDim.new(0,8)})
    new("UIStroke",{Parent=root, Color=THEME.Accent, Thickness=1})
    new("TextLabel",{Parent=root, Position=UDim2.new(0,12,0,6), Size=UDim2.new(1,-24,0,20), BackgroundTransparency=1, Text=title, Font=Enum.Font.GothamBold, TextSize=16, TextColor3=THEME.Text, TextXAlignment=Enum.TextXAlignment.Left})
    new("TextLabel",{Parent=root, Position=UDim2.new(0,12,0,26), Size=UDim2.new(1,-24,0,30), BackgroundTransparency=1, Text=content, Font=Enum.Font.Gotham, TextSize=14, TextColor3=THEME.Text, TextWrapped=true, TextXAlignment=Enum.TextXAlignment.Left})
    task.delay(duration,function() pcall(function() gui:Destroy() end) end)
end

-- GabGui main
local GabGui = {}
GabGui.__index = GabGui

function GabGui:CreateWindow(opts)
    opts = opts or {}
    local name = opts.Name or "GabGui Window"
    local size = opts.Size or THEME.WindowSize
    local pos = opts.Position or UDim2.new(0.5, -size.X.Offset/2, 0.5, -size.Y.Offset/2)
    local ScreenGui = new("ScreenGui",{Parent=PlayerGui, ResetOnSpawn=false, Name="GabGui_"..tostring(name)})
    ScreenGui.IgnoreGuiInset = true

    local frame = new("Frame",{Parent=ScreenGui, Size=size, Position=pos, BackgroundColor3=THEME.Background, BorderSizePixel=0})
    frame.Active = true
    frame.Draggable = true
    new("UICorner",{Parent=frame, CornerRadius=UDim.new(0, THEME.Corner)})
    new("UIStroke",{Parent=frame, Color=THEME.Accent, Thickness=2})

    -- Header
    local header = new("Frame",{Parent=frame, Size=UDim2.new(1,0,0,34), BackgroundColor3=THEME.Header})
    new("UICorner",{Parent=header, CornerRadius=UDim.new(0, THEME.Corner)})
    local titleLabel = new("TextLabel",{Parent=header, Text=name, BackgroundTransparency=1, TextColor3=THEME.Text, Font=Enum.Font.GothamBold, TextSize=16, Position=UDim2.new(0,12,0,0), Size=UDim2.new(1,-40,1,0), TextXAlignment=Enum.TextXAlignment.Left})
    local closeBtn = new("TextButton",{Parent=header, Text="Ã—", Size=UDim2.new(0,34,1,0), Position=UDim2.new(1,-34,0,0), BackgroundTransparency=1, TextColor3=Color3.fromRGB(255,100,100), Font=Enum.Font.GothamBold, TextSize=22})
    closeBtn.MouseButton1Click:Connect(function() frame.Visible=false end)

    -- Tabs bar
    local tabBar = new("ScrollingFrame",{Parent=frame, Size=UDim2.new(1,-10,0,36), Position=UDim2.new(0,5,0,38), BackgroundTransparency=1, ScrollBarThickness=6, CanvasSize=UDim2.new(0,0,0,0), ScrollingDirection=Enum.ScrollingDirection.X})
    tabBar.AutomaticCanvasSize = Enum.AutomaticSize.X
    tabBar.ScrollBarImageColor3 = THEME.Accent
    tabBar.ScrollBarImageTransparency = 0.5
    local tabList = new("UIListLayout",{Parent=tabBar})
    tabList.FillDirection = Enum.FillDirection.Horizontal
    tabList.Padding = UDim.new(0,6)
    tabList.HorizontalAlignment = Enum.HorizontalAlignment.Left

    -- Content holder
    local contentHolder = new("Frame",{Parent=frame, Size=UDim2.new(1,-10,1,-84), Position=UDim2.new(0,5,0,78), BackgroundTransparency=1})

    local WindowObj = {}
    WindowObj._tabs = {}
    WindowObj.ActiveTab = nil

    -- Create Tab
    function WindowObj:CreateTab(title)
        local tabBtn = new("TextButton",{Parent=tabBar, Size=UDim2.new(0,110,1,0), BackgroundColor3=THEME.Button, Text=title, Font=Enum.Font.GothamSemibold, TextSize=14, TextColor3=THEME.Text})
        new("UICorner",{Parent=tabBtn, CornerRadius=UDim.new(0,8)})
        local tabPanel = new("ScrollingFrame",{Parent=contentHolder, Size=UDim2.new(1,0,1,0), CanvasSize=UDim2.new(0,0,0,0), BackgroundTransparency=1, ScrollBarThickness=6})
        tabPanel.AutomaticCanvasSize = Enum.AutomaticSize.Y
        local layout = new("UIListLayout",{Parent=tabPanel, Padding=UDim.new(0,8), SortOrder=Enum.SortOrder.LayoutOrder})
        tabPanel.Visible=false

        tabBtn.MouseButton1Click:Connect(function()
            for _,t in ipairs(WindowObj._tabs) do
                t.Panel.Visible=false
                t.Button.BackgroundColor3 = THEME.Button
            end
            tabPanel.Visible=true
            tabBtn.BackgroundColor3 = THEME.Accent
            WindowObj.ActiveTab=title
        end)

        if #WindowObj._tabs==0 then
            tabPanel.Visible=true
            tabBtn.BackgroundColor3 = THEME.Accent
            WindowObj.ActiveTab=title
        end

        local TabObj={}
        TabObj.Button=tabBtn
        TabObj.Panel=tabPanel

        -- Section
        function TabObj:CreateSection(name)
            local sec = new("Frame",{Parent=tabPanel, Size=UDim2.new(1,0,0,26), BackgroundTransparency=1})
            new("TextLabel",{Parent=sec, Text=name or "", BackgroundTransparency=1, TextColor3=THEME.Text, Font=Enum.Font.GothamBold, TextSize=15, Size=UDim2.new(1,0,1,0), TextXAlignment=Enum.TextXAlignment.Left})
            return TabObj
        end

        -- Button
        function TabObj:CreateButton(data)
            data=data or {}
            local btn = new("TextButton",{Parent=tabPanel, Size=UDim2.new(1,-20,0,28), BackgroundColor3=THEME.Button, Text="  "..(data.Name or "Button"), TextXAlignment=Enum.TextXAlignment.Left, Font=Enum.Font.Gotham, TextSize=14, TextColor3=THEME.Text})
            new("UICorner",{Parent=btn, CornerRadius=UDim.new(0,8)})
            btn.MouseButton1Click:Connect(function() pcall(data.Callback) end)
            return btn
        end

        -- Toggle
        function TabObj:CreateToggle(data)
            data=data or {}
            local frame = new("Frame",{Parent=tabPanel, Size=UDim2.new(1,-20,0,28), BackgroundColor3=THEME.Button})
            new("UICorner",{Parent=frame, CornerRadius=UDim.new(0,8)})
            local label = new("TextLabel",{Parent=frame, Size=UDim2.new(0.8,0,1,0), BackgroundTransparency=1, Text=data.Name or "Toggle", TextColor3=THEME.Text, Font=Enum.Font.Gotham, TextSize=14, TextXAlignment=Enum.TextXAlignment.Left})
            local toggleBtn = new("TextButton",{Parent=frame, Size=UDim2.new(0,24,0,24), Position=UDim2.new(1,-28,0,2), BackgroundColor3=THEME.ToggleOff, Text="", AutoButtonColor=false})
            new("UICorner",{Parent=toggleBtn, CornerRadius=UDim.new(0,6)})
            local state=false
            toggleBtn.MouseButton1Click:Connect(function()
                state = not state
                toggleBtn.BackgroundColor3 = state and THEME.ToggleOn or THEME.ToggleOff
                if data.Callback then pcall(data.Callback,state) end
            end)
            return {Get=function() return state end, Set=function(_,v) state=v; toggleBtn.BackgroundColor3=state and THEME.ToggleOn or THEME.ToggleOff end}
        end

        -- Input
        function TabObj:CreateInput(data)
            data=data or {}
            local container = new("Frame",{Parent=tabPanel, Size=UDim2.new(1,-20,0,28), BackgroundColor3=THEME.Button})
            new("UICorner",{Parent=container, CornerRadius=UDim.new(0,8)})
            local label = new("TextLabel",{Parent=container, Size=UDim2.new(0.4,0,1,0), BackgroundTransparency=1, Text=data.Name or "Input", TextXAlignment=Enum.TextXAlignment.Left, TextColor3=THEME.Text, Font=Enum.Font.Gotham, TextSize=14})
            local box = new("TextBox",{Parent=container, Size=UDim2.new(0.55,-4,1,0), Position=UDim2.new(0.4,4,0,0), Text=data.CurrentValue or "", PlaceholderText=data.PlaceholderText or "", BackgroundColor3=Color3.fromRGB(60,60,70), TextColor3=THEME.Text, Font=Enum.Font.Gotham, TextSize=14, ClearTextOnFocus=false})
            new("UICorner",{Parent=box, CornerRadius=UDim.new(0,6)})
            box.FocusLost:Connect(function(enterPressed)
                if enterPressed and data.Callback then pcall(data.Callback, box.Text) end
            end)
            return box
        end

        WindowObj._tabs[#WindowObj._tabs+1]=TabObj
        return TabObj
    end

    setmetatable(WindowObj,GabGui)
    return WindowObj
end

return GabGui
